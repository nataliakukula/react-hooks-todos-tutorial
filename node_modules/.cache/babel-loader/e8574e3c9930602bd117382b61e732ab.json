{"ast":null,"code":"import _slicedToArray from \"/Users/nataliakukula/Desktop/hooks-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nataliakukula/Desktop/hooks-app/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css'; // import { format } from 'upath';\n//Creating a Todo function component\n//Each Todo is going to be div with text inside\n\nfunction Todo({\n  todo,\n  index\n}) {\n  return React.createElement(\"div\", {\n    style: {\n      textDecoration: todo.isCompleted ? 'line-through' : ''\n    },\n    className: \"todo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, todo.text, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  })));\n} // {} the brackets are destructuring the method form props\n\n\nfunction TodoForm({\n  addTodo\n}) {\n  //Hook: destructuring [variable, method] = useState();\n  // var _useState = useState();\n  // variable = _useState[0]; useState is treated as an array\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        value = _useState2[0],\n        setValue = _useState2[1];\n\n  const handleSubmit = e => {\n    e.preventDefault(); // don't submit if there's an empty value\n\n    if (!value) return;\n    addTodo(value);\n    setValue(\"\");\n  };\n\n  return (// with e.target.value -> that's how we get to the value of the input tag\n    React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"input\",\n      value: value,\n      onChange: e => setValue(e.target.value),\n      placeholder: \"Add todo...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }))\n  );\n} //Creating the highest level App component\n//using a react hook\n\n\nfunction App() {\n  // destructuring the \"state\"\n  // we have a todo variable\n  //and a function that will set the new \"state\" of the variable\n  const _useState3 = useState([{\n    text: 'Learn about React',\n    isCompleted: false\n  }, {\n    text: 'Meet friends for lunch',\n    isCompleted: false\n  }, {\n    text: 'Build really cool todo app',\n    isCompleted: false\n  }]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        todos = _useState4[0],\n        setTodos = _useState4[1];\n\n  const addTodo = text => {\n    const newTodos = [...todos, {\n      text\n    }];\n    setTodos(newTodos);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"app\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"todo-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, todos.map((todo, index) => React.createElement(Todo, {\n    key: index,\n    index: index,\n    todo: todo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })), React.createElement(TodoForm, {\n    addTodo: addTodo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/nataliakukula/Desktop/hooks-app/src/App.js"],"names":["React","useState","Todo","todo","index","textDecoration","isCompleted","text","TodoForm","addTodo","value","setValue","handleSubmit","e","preventDefault","target","App","todos","setTodos","newTodos","map"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP,C,CACA;AAEA;AACA;;AACA,SAASC,IAAT,CAAc;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAd,EAA+B;AAE7B,SACE;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,cAAc,EAAEF,IAAI,CAACG,WAAL,GAAmB,cAAnB,GAAoC;AAArD,KAAZ;AAAsE,IAAA,SAAS,EAAC,MAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,IAAI,CAACI,IADR,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CADF;AAQD,C,CACD;;;AACA,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAA+B;AAC7B;AACA;AACA;AAH6B,oBAKHR,QAAQ,CAAC,EAAD,CALL;AAAA;AAAA,QAKtBS,KALsB;AAAA,QAKfC,QALe;;AAO7B,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACxBA,IAAAA,CAAC,CAACC,cAAF,GADwB,CAExB;;AACA,QAAI,CAACJ,KAAL,EAAY;AACZD,IAAAA,OAAO,CAACC,KAAD,CAAP;AACAC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GAND;;AAOA,SACE;AACA;AAAM,MAAA,QAAQ,EAAEC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAC,OAA7B;AAAqC,MAAA,KAAK,EAAEF,KAA5C;AAAmD,MAAA,QAAQ,EAAEG,CAAC,IAC9DF,QAAQ,CAACE,CAAC,CAACE,MAAF,CAASL,KAAV,CADR;AAC0B,MAAA,WAAW,EAAC,aADtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAFF;AAOD,C,CAED;AACA;;;AACA,SAASM,GAAT,GAAe;AACb;AACA;AACA;AAHa,qBAKaf,QAAQ,CAAC,CACjC;AACEM,IAAAA,IAAI,EAAE,mBADR;AAEED,IAAAA,WAAW,EAAE;AAFf,GADiC,EAKjC;AACEC,IAAAA,IAAI,EAAE,wBADR;AAEED,IAAAA,WAAW,EAAE;AAFf,GALiC,EASjC;AACEC,IAAAA,IAAI,EAAE,4BADR;AAEED,IAAAA,WAAW,EAAE;AAFf,GATiC,CAAD,CALrB;AAAA;AAAA,QAKNW,KALM;AAAA,QAKCC,QALD;;AAoBb,QAAMT,OAAO,GAAGF,IAAI,IAAI;AACtB,UAAMY,QAAQ,GAAG,CAAC,GAAGF,KAAJ,EAAW;AAACV,MAAAA;AAAD,KAAX,CAAjB;AACAW,IAAAA,QAAQ,CAACC,QAAD,CAAR;AACD,GAHD;;AAKA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KAAK,CAACG,GAAN,CAAU,CAACjB,IAAD,EAAOC,KAAP,KACT,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,KAAX;AAAkB,IAAA,KAAK,EAAEA,KAAzB;AAAgC,IAAA,IAAI,EAAED,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,EAIE,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAEM,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,CADF;AAWD;;AAED,eAAeO,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n// import { format } from 'upath';\n\n//Creating a Todo function component\n//Each Todo is going to be div with text inside\nfunction Todo({ todo, index }) {\n\n  return (\n    <div style={{textDecoration: todo.isCompleted ? 'line-through' : ''}} className=\"todo\">\n      {todo.text}\n      <div>\n        <button></button>\n      </div>\n    </div>\n  )\n}\n// {} the brackets are destructuring the method form props\nfunction TodoForm({ addTodo }) {\n  //Hook: destructuring [variable, method] = useState();\n  // var _useState = useState();\n  // variable = _useState[0]; useState is treated as an array\n  // method = _useState[1];\n  const [value, setValue] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    // don't submit if there's an empty value\n    if (!value) return;\n    addTodo(value);\n    setValue(\"\");\n  }\n  return (\n    // with e.target.value -> that's how we get to the value of the input tag\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" className=\"input\" value={value} onChange={e => \n      setValue(e.target.value)} placeholder=\"Add todo...\"/>\n    </form>\n  )\n}\n\n//Creating the highest level App component\n//using a react hook\nfunction App() {\n  // destructuring the \"state\"\n  // we have a todo variable\n  //and a function that will set the new \"state\" of the variable\n  // useState function is initialized with a \"state\" (array of objects)\n  const [todos, setTodos] = useState([\n    {\n      text: 'Learn about React',\n      isCompleted: false\n    },\n    {\n      text: 'Meet friends for lunch',\n      isCompleted: false\n    },\n    {\n      text: 'Build really cool todo app',\n      isCompleted: false\n    }\n  ]);\n\n  const addTodo = text => {\n    const newTodos = [...todos, {text}];\n    setTodos(newTodos);\n  }\n\n  return (\n    <div className=\"app\">\n      <div className=\"todo-list\">\n        {todos.map((todo, index) =>\n          <Todo key={index} index={index} todo={todo} />\n        )}\n        <TodoForm addTodo={addTodo}/>\n      </div>\n    </div>\n  )\n\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}